#!/bin/bash

# Define variables
API_URL="https://pokeapi.co/api/v2/pokemon/pikachu"
DATA_FILE="data.json"
ERROR_FILE="errors.txt"

# Create Error log file if doesn't exist
touch "$ERROR_FILE"

# Make API request and handle possible errors
echo "Fetching Pikachu data from pokeAPI..."
if curl -f -s "$API_URL" -o "$DATA_FILE"; then
    echo "Success: Data saved to $DATA_FILE"
else
    # Get the HTTP status code
    STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$API_URL")

    # Log the error with timestamp
    ERROR_MESSAGE= "$(date '+%Y-%m-%d %H:%M:%S') - Failed to fetch data. HTTP Status: $STATUS"
    echo "$ERROR_MESSAGE" >> "$ERROR_FILE"
    echo "Error: Failed to fetch data. check $ERROR_FILE for details."
    exit 1
fi

# Verify the JSON file is not empty
if [ ! -s "$DATA_FILE" ]; then
    ERROR_MESSAGE="$(date '+%Y-%m-%d %H:%M:%S') - Error: Download file is empty"
    echo "$ERROR_MESSAGE" >> "$ERROR_FILE"
    echo "Error: Download file is empty. Check $ERROR_FILE for details."
    exit 1
fi

# Verify JSON validity
if ! jq empty "$DATA_FILE" 2>/dev/null; then
    ERROR_MESSAGE= "$(date '+%Y-%-%d %H:%M:%S') - Error: Invalid JSON data recieved"
    echo "$ERROR_MESSAGE" >> "$ERROR_FILE"
    echo "Error: Invalid JSON data. Check $ERROR_FILE for details."
    exit 1
fi
